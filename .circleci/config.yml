# Scala CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/sample-config/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-hello-circleci-{{ .Branch }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-{{ checksum "project/Dependencies.scala" }}-{{ checksum "build.sbt" }}
            #- v1-hello-circleci-{{ .Branch }}-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-hello-circleci

      - run: sbt test:compile

      - save_cache:
          key: v1-hello-circleci-{{ .Branch }}-{{ checksum "project/build.properties" }}-{{ checksum "project/plugins.sbt" }}-{{ checksum "project/Dependencies.scala" }}-{{ checksum "build.sbt" }}
          paths:
            - ~/.ivy2
            - ~/.sbt/boot
            - ~/.sbt/0.13
            - target
            - project/target

      # run tests!
      - run: sbt test:test

      - run:
          name: Save test results
          command: |
            mkdir ~/junit/
            find . -type f -regex ".*/target/test-reports/.*xml" -exec cp {} ~/junit/ \;
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit

      # run
      #- run: sbt "runMain Hello"
#
#